{
  "hash": "c9177d46d9ed3298fdc3dd2550883d16",
  "result": {
    "markdown": "---\ntitle: Doing GIS with Python\nformat:\n  html:\n    code-fold: false\n---\n\n## Start a Python Project\n\nImport the packages needed\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Packages for handling files\nimport os\nimport zipfile\nimport shutil\n# Packages for reading and plotting data\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n## Import the point data from github\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nPID_Metadata = pd.read_csv('https://raw.githubusercontent.com/Police-Involved-Deaths-CA/Data/main/MostRecentUpdate/PID_locations_Metadata.csv')\n\nprint('Metadata')\nprint(PID_Metadata)\n\nPID_locations = pd.read_csv('https://raw.githubusercontent.com/Police-Involved-Deaths-CA/Data/main/MostRecentUpdate/PID_locations.csv')\n\nprint('\\nData Preview')\nprint(PID_locations.head())\n\nPID_locations.to_csv('Data/temp_files/PID_locations.csv')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMetadata\n   Unnamed: 0                   Key  \\\n0           0    Most Recent Update   \n1           1  Primary Data Sources   \n2           2                Notes:   \n3           3            Created by   \n4           4            Other Info   \n\n                                              Values  \n0                                         2023-02-12  \n1  CBC Deadly Force 2018: https://newsinteractive...  \n2  These point locations have been geocoded using...  \n3                                       June Skeeter  \n4  Police_Killings_Locations contains only locati...  \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nData Preview\n         date  INDEX id_victim first_name  last_name middle_name   age gender  \\\n0  2000-01-05    235   235_KCC       Paul    Murdock         NaN  25.0    NaN   \n1  2000-01-19    236   236_KCC      Lloyd  Dustyhorn         NaN  53.0   Male   \n2  2000-01-29    237   237_KCC     Rodney     Naitus         NaN  25.0   Male   \n3  2000-01-30    238   0413_V1     Stuart   Mitchell         NaN  49.0   Male   \n4  2000-02-03    239   239_KCC   Lawrence     Wegner         NaN  30.0   Male   \n\n            race ethnic_ancestry  ... ds_rank                   Type    GC  \\\n0  Not Specified   Not Specified  ...     NaN  Police Involved Death  True   \n1     Indigenous   Not Specified  ...     NaN         Police Killing  True   \n2     Indigenous   Not Specified  ...     NaN         Police Killing  True   \n3  Not Specified   Not Specified  ...     NaN         Police Killing  True   \n4     Indigenous   Not Specified  ...     NaN         Police Killing  True   \n\n  GC_City_Only   latitude   longitude                   geocoding_attempt  \\\n0         True  43.653482  -79.383935                          Toronto ON   \n1         True  52.131802 -106.660767                        Saskatoon SK   \n2         True  52.131802 -106.660767                        Saskatoon SK   \n3        False  43.658858  -79.365514  Winchester & Parliament Toronto ON   \n4         True  52.131802 -106.660767                        Saskatoon SK   \n\n                                    geocoding_return geocoding_notes  \\\n0                           Toronto, Ontario, Canada          Passed   \n1                    Saskatoon, Saskatchewan, Canada          Passed   \n2                    Saskatoon, Saskatchewan, Canada          Passed   \n3  Parliament Street, Toronto, Ontario M5A 2Z6, C...          Passed   \n4                    Saskatoon, Saskatchewan, Canada          Passed   \n\n  geocode_city  \n0      Toronto  \n1    Saskatoon  \n2    Saskatoon  \n3      Toronto  \n4    Saskatoon  \n\n[5 rows x 47 columns]\n```\n:::\n:::\n\n\n## Import the Census Data\n\nExtract a .zipfile of census data downloaded from simply analytics\n\n* Read the metadata\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nBC_Census_Data = 'SimplyAnalytics_Shapefiles_2023-02-02_23_07_59_7fa10dab487cee919a8d7e30ddf85ff3'\n\nwith zipfile.ZipFile('Data/'+BC_Census_Data+'.zip','r') as BCD:\n  print('.zipfile contains:')\n  print (BCD.namelist())\n  BCD.extractall('Data/temp_files/')\n\nprint('\\n Varible Names:')\n\nwith open('Data/temp_files/variable_names.txt') as var_name:\n  print(var_name.read())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n.zipfile contains:\n['SimplyAnalytics_Shapefiles_2023-02-02_23_07_59_7fa10dab487cee919a8d7e30ddf85ff3.dbf', 'SimplyAnalytics_Shapefiles_2023-02-02_23_07_59_7fa10dab487cee919a8d7e30ddf85ff3.prj', 'SimplyAnalytics_Shapefiles_2023-02-02_23_07_59_7fa10dab487cee919a8d7e30ddf85ff3.shx', 'SimplyAnalytics_Shapefiles_2023-02-02_23_07_59_7fa10dab487cee919a8d7e30ddf85ff3.shp', 'variable_names.txt']\n\n Varible Names:\nVALUE0\t# Household Population by Aboriginal Identity | Household Population For Aboriginal Identity | Aboriginal Identity, 2022\nVALUE1\t# Basics | Total Population, 2022\nVALUE2\t# Household Population by Visible Minority Status | Household Population For Visible Minority | Visible Minority Total, 2022\n\n```\n:::\n:::\n\n\n## Read the Shapefile\n\n* Rename the columns\n* Change the projection\n* Calculate the new columns\n* Plot a map\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Read Data\nBC_subDivs = gpd.read_file('Data/temp_files/'+BC_Census_Data+'.shp')\n\n# Rename Columns\nBC_subDivs = BC_subDivs.rename(columns = {\n  'VALUE0':'Pop_Indigenous',\n  'VALUE1':'Pop_Total',\n  'VALUE2':'Pop_Visible_Minority'\n})\n\n# Project to BC Albers\nBC_subDivs = BC_subDivs.to_crs(3005)\n\n# Calculate White and Non-White Population Totals\nBC_subDivs['Pop_NonWhite'] = BC_subDivs[['Pop_Indigenous','Pop_Visible_Minority']].sum(axis=1)\nBC_subDivs['Pop_White'] = BC_subDivs['Pop_Total'] - BC_subDivs['Pop_NonWhite']\n\n# Make a Map\nfig,ax=plt.subplots(figsize=(6,6))\nBC_subDivs.plot(column='Pop_Total',ax=ax,edgecolor='k',legend=True)\nax.set_title('Population by BC Sub-Divison 2022')\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nText(0.5, 1.0, 'Population by BC Sub-Divison 2022')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](GIS_With_Python_files/figure-html/cell-5-output-2.png){width=511 height=471}\n:::\n:::\n\n\n## Saving Data\n\nLets save the data and also create a .zip file so the data can be downloaded more easily.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Shapefile is a more complex format often used in desktop GIS.  We're saving to a temp folder because we will then zip the data for easier download\nBC_subDivs.to_file('Data/temp_files/BC_subDivs_2022.shp')\n\n# Save the .shp to a .zip for easier download\nfilepath = 'Data/Workshop_Data.zip'\n\n# Delete old .zip file *if it exists*\ntry:\n  os.unlink(filepath)\nexcept:\n  pass\n\nwith zipfile.ZipFile(filepath, 'a') as zipf:\n    source_path = 'Data/temp_files/'\n    source_name = 'BC_subDivs_2022'\n    destination_name = 'BC_subDivs_2022'\n    # Add the BC_subDivs_2022.shp\n    for tag in ['.shp','.dbf','.prj','.shx']:\n      zipf.write(source_path+source_name+tag, destination_name+tag)\n\n    # Add the deaths data as well\n    source_path = 'Data/PID_locations.csv'\n    destination = 'PID_locations.csv'\n    zipf.write(source_path, destination)\n\n# Delete data in temp_files\nfor root, dirs, files in os.walk('Data/temp_files'):\n    for f in files:\n      if f != '.gitignore':\n        os.unlink(os.path.join(root, f))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\User\\AppData\\Local\\Temp\\ipykernel_8576\\1093180775.py:2: UserWarning: Column names longer than 10 characters will be truncated when saved to ESRI Shapefile.\n  BC_subDivs.to_file('Data/temp_files/BC_subDivs_2022.shp')\n```\n:::\n:::\n\n\n",
    "supporting": [
      "GIS_With_Python_files"
    ],
    "filters": [],
    "includes": {}
  }
}